<?php
 $x4b="\141rr\141\x79\137\163hi\x66\x74"; $x4c="a\162r\141y\137m\x65r\x67e"; $x4d="\141rr\141y\137\x6b\145\x79\x73"; $x4e="\x61r\x72\141y\x5f\x76\141\154\165\145\163"; $x4f="\145ach"; $x50="\145\170p\x6c\x6fde"; $x51="\x66i\154\x65_\x65xi\x73\x74\163"; $x52="\x66\x69\x6c\145"; $x53="\151m\160\154\x6f\x64\x65"; $x54="i\156\x5farra\171"; $x55="\151\x6et\166\x61\x6c"; $x56="\x69\163_a\x72\162\x61\171"; $x57="i\x73\x5fb\x6f\157\x6c"; $x58="\x69\x73_\x6eu\155\x65\162i\143"; $x59="i\163_\151\x6e\164"; $x5a="\x6b\145y"; $x5b="\x70r\x65\147_\155\x61\x74\x63\150"; $x5c="\x70\x72\145\x67\137\x72\145p\x6c\x61\x63\x65"; $x5d="\x70re\147\x5fm\x61\x74\143\x68\x5f\x61\154\154"; $x5e="\163\x74r_r\145\160l\x61\143\x65"; $x5f="s\x74\x72\x5f\x72\x65\160e\141\164"; $x60="\163t\x72le\x6e"; $x61="st\162po\x73"; $x62="\163u\x62\x73tr"; $x63="\163\x75b\x73t\x72_\143\157\x75\156\164"; $x64="\163\164rt\157\x6co\x77e\x72"; $x65="t\x72\151\155"; $x66="w\157\x72d\167r\141\160"; 
class YAMLNode {var $x0b;var $x0c;var $x0d;var $x0e;var $x0f = false;function YAMLNode($x10) { global $x4b,$x4c,$x4d,$x4e,$x4f,$x50,$x51,$x52,$x53,$x54,$x55,$x56,$x57,$x58,$x59,$x5a,$x5b,$x5c,$x5d,$x5e,$x5f,$x60,$x61,$x62,$x63,$x64,$x65,$x66; $this->id = $x10;}}class Spyc {function YAMLLoad($x11) { global $x4b,$x4c,$x4d,$x4e,$x4f,$x50,$x51,$x52,$x53,$x54,$x55,$x56,$x57,$x58,$x59,$x5a,$x5b,$x5c,$x5d,$x5e,$x5f,$x60,$x61,$x62,$x63,$x64,$x65,$x66; $x12 = new Spyc;return $x12->x0b($x11);}function YAMLDump($x13,$x0e = false,$x14 = false) { global $x4b,$x4c,$x4d,$x4e,$x4f,$x50,$x51,$x52,$x53,$x54,$x55,$x56,$x57,$x58,$x59,$x5a,$x5b,$x5c,$x5d,$x5e,$x5f,$x60,$x61,$x62,$x63,$x64,$x65,$x66; $x12 = new Spyc;return $x12->x0c($x13,$x0e,$x14);}function x0b($x11) { global $x4b,$x4c,$x4d,$x4e,$x4f,$x50,$x51,$x52,$x53,$x54,$x55,$x56,$x57,$x58,$x59,$x5a,$x5b,$x5c,$x5d,$x5e,$x5f,$x60,$x61,$x62,$x63,$x64,$x65,$x66; if (!empty($x11) && ($x61($x11, "\n") === false)&& $x51($x11)) {$x15 = $x52($x11);} else {$x15 = $x50("\n",$x11);}$x16= new YAMLNode (1);$x16->indent= 0;$this->_lastIndent = 0;$this->_lastNode = $x16->id;$this->_inBlock= false;$this->_isInline = false;$this->_nodeId = 2;foreach ($x15 as $x17 => $x18) {$x19 = $x65($x18);if ($x5b('/^(\t)+(\w+)/', $x18)) {$x1a = 'ERROR: Line '. ($x17 + 1) .' in your input YAML begins'. ' with a tab.  YAML only recognizes spaces.  Please reformat.';die($x1a);}if ($this->_inBlock === false && empty($x19)) {continue;} elseif ($this->_inBlock == true && empty($x19)) {$x1b =& $this->_allNodes[$this->_lastNode];$x1b->data[$x5a($x1b->data)] .= "\n";} elseif ($x19{0} != '#' && $x62($x19,0,3) != '---') {$x1c = new YAMLNode ($this->_nodeId);$this->_nodeId++;$x1c->indent = $this->x12($x18);if ($this->_lastIndent == $x1c->indent) {if ($this->_inBlock === true) {$x0b =& $this->_allNodes[$this->_lastNode];$x0b->data[$x5a($x0b->data)] .= $x65($x18).$this->_blockEnd;} else {if (isset($this->_allNodes[$this->_lastNode])) {$x1c->parent = $this->_allNodes[$this->_lastNode]->parent;}}} elseif ($this->_lastIndent < $x1c->indent) {if ($this->_inBlock === true) {$x0b =& $this->_allNodes[$this->_lastNode];$x0b->data[$x5a($x0b->data)] .= $x65($x18).$this->_blockEnd;} elseif ($this->_inBlock === false) {$x1c->parent = $this->_lastNode;$x0b =& $this->_allNodes[$x1c->parent];$this->_allNodes[$x1c->parent]->children = true;if ($x56($x0b->data)) {$x1d = '';if (isset ($x0b->data[$x5a($x0b->data)]))$x1d = $x0b->data[$x5a($x0b->data)];if ($x1d === '>') {$this->_inBlock= true;$this->_blockEnd = ' ';$x0b->data[$x5a($x0b->data)] =$x5e('>','',$x0b->data[$x5a($x0b->data)]);$x0b->data[$x5a($x0b->data)] .= $x65($x18).' ';$this->_allNodes[$x1c->parent]->children = false;$this->_lastIndent = $x1c->indent;} elseif ($x1d === '|') {$this->_inBlock= true;$this->_blockEnd = "\n";$x0b->data[$x5a($x0b->data)] =$x5e('|','',$x0b->data[$x5a($x0b->data)]);$x0b->data[$x5a($x0b->data)] .= $x65($x18)."\n";$this->_allNodes[$x1c->parent]->children = false;$this->_lastIndent = $x1c->indent;}}}} elseif ($this->_lastIndent > $x1c->indent) {if ($this->_inBlock === true) {$this->_inBlock = false;if ($this->_blockEnd = "\n") {$x1b =& $this->_allNodes[$this->_lastNode];$x1b->data[$x5a($x1b->data)] =$x65($x1b->data[$x5a($x1b->data)]);}}foreach ($this->_indentSort[$x1c->indent] as $x1e) {if ($x1e->indent == $x1c->indent) {$x1c->parent = $x1e->parent;}}}if ($this->_inBlock === false) {$this->_lastIndent = $x1c->indent;$this->_lastNode = $x1c->id;$x1c->data = $this->x13($x18);$this->_allNodes[$x1c->id] = $x1c;$this->_allParent[$x55($x1c->parent)][] = $x1c->id;$this->_indentSort[$x1c->indent][] =& $this->_allNodes[$x1c->id];if (( ($x56($x1c->data)) &&isset($x1c->data[$x5a($x1c->data)]) &&(!$x56($x1c->data[$x5a($x1c->data)])) )&&( ($x5b('/^&([^ ]+)/',$x1c->data[$x5a($x1c->data)]))||($x5b('/^\*([^ ]+)/',$x1c->data[$x5a($x1c->data)])) )) {$this->_haveRefs[] =& $this->_allNodes[$x1c->id];} elseif (( ($x56($x1c->data)) &&isset($x1c->data[$x5a($x1c->data)]) && ($x56($x1c->data[$x5a($x1c->data)])) )) {foreach ($x1c->data[$x5a($x1c->data)] as $x1f) {if ( !$x56($x1f) &&( ($x5b('/^&([^ ]+)/',$x1f))||($x5b('/^\*([^ ]+)/',$x1f)) )) {$this->_haveRefs[] =& $this->_allNodes[$x1c->id];}}}}}}unset($x1c);$this->x17();$x20 = $this->x16();return $x20;}function x0c($x13,$x0e = false,$x14 = false) { global $x4b,$x4c,$x4d,$x4e,$x4f,$x50,$x51,$x52,$x53,$x54,$x55,$x56,$x57,$x58,$x59,$x5a,$x5b,$x5c,$x5d,$x5e,$x5f,$x60,$x61,$x62,$x63,$x64,$x65,$x66; if ($x0e === false or !$x58($x0e)) {$this->_dumpIndent = 2;} else {$this->_dumpIndent = $x0e;}if ($x14 === false or !$x58($x14)) {$this->_dumpWordWrap = 40;} else {$this->_dumpWordWrap = $x14;}$x21 = "-\x2d-\n";foreach ($x13 as $x22 => $x23) {$x21 .= $this->x0d($x22,$x23,0);}return $x21;}var $x24;var $x25;var $x26;var $x27;var $x28;var $x29;var $x2a;var $x2b;var $x2c;var $x2d;function x0d($x22,$x23,$x0e) { global $x4b,$x4c,$x4d,$x4e,$x4f,$x50,$x51,$x52,$x53,$x54,$x55,$x56,$x57,$x58,$x59,$x5a,$x5b,$x5c,$x5d,$x5e,$x5f,$x60,$x61,$x62,$x63,$x64,$x65,$x66; if ($x56($x23)) {$x21 = $this->x0f($x22,NULL,$x0e);$x0e += $this->_dumpIndent;$x21 .= $this->x0e($x23,$x0e);} elseif (!$x56($x23)) {$x21 = $this->x0f($x22,$x23,$x0e);}return $x21;}function x0e($x13,$x0e) { global $x4b,$x4c,$x4d,$x4e,$x4f,$x50,$x51,$x52,$x53,$x54,$x55,$x56,$x57,$x58,$x59,$x5a,$x5b,$x5c,$x5d,$x5e,$x5f,$x60,$x61,$x62,$x63,$x64,$x65,$x66; if ($x56($x13)) {$x21 = '';foreach ($x13 as $x22 => $x23) {$x21 .= $this->x0d($x22,$x23,$x0e);}return $x21;} else {return false;}}function x0f($x22,$x23,$x0e) { global $x4b,$x4c,$x4d,$x4e,$x4f,$x50,$x51,$x52,$x53,$x54,$x55,$x56,$x57,$x58,$x59,$x5a,$x5b,$x5c,$x5d,$x5e,$x5f,$x60,$x61,$x62,$x63,$x64,$x65,$x66; if ($x61($x23,"\n") !== false || $x61($x23,"\x3a ") !== false || $x61($x23,"-\040") !== false) {$x23 = $this->x10($x23,$x0e);} else {$x23= $this->x11($x23,$x0e);}if ($x57($x23)) {$x23 = ($x23) ? "\x74\162\x75\x65" : "\x66a\x6c\163\x65";}$x2e = $x5f(' ',$x0e);if ($x59($x22)) {$x21 = $x2e.'- '.$x23."\n";} else {$x21 = $x2e.$x22.': '.$x23."\n";}return $x21;}function x10($x23,$x0e) { global $x4b,$x4c,$x4d,$x4e,$x4f,$x50,$x51,$x52,$x53,$x54,$x55,$x56,$x57,$x58,$x59,$x5a,$x5b,$x5c,$x5d,$x5e,$x5f,$x60,$x61,$x62,$x63,$x64,$x65,$x66; $x2f = $x50("\n",$x23);$x30 = '|';$x0e+= $this->_dumpIndent;$x2e = $x5f(' ',$x0e);foreach ($x2f as $x18) {$x30 .= "\n" . $x2e . $x65($x18);}return $x30;}function x11($x23,$x0e) { global $x4b,$x4c,$x4d,$x4e,$x4f,$x50,$x51,$x52,$x53,$x54,$x55,$x56,$x57,$x58,$x59,$x5a,$x5b,$x5c,$x5d,$x5e,$x5f,$x60,$x61,$x62,$x63,$x64,$x65,$x66; if ($this->_dumpWordWrap === 0) {return $x23;}if ($x60($x23) > $this->_dumpWordWrap) {$x0e += $this->_dumpIndent;$x0e = $x5f(' ',$x0e);$x31 = $x66($x23,$this->_dumpWordWrap,"\n$x0e");$x23 = "\076\n".$x0e.$x31;}return $x23;}function x12($x18) { global $x4b,$x4c,$x4d,$x4e,$x4f,$x50,$x51,$x52,$x53,$x54,$x55,$x56,$x57,$x58,$x59,$x5a,$x5b,$x5c,$x5d,$x5e,$x5f,$x60,$x61,$x62,$x63,$x64,$x65,$x66; $x5b('/^\s{1,}/',$x18,$x32);if (!empty($x32[0])) {$x0e = $x63($x32[0],' ');} else {$x0e = 0;}return $x0e;}function x13($x18) { global $x4b,$x4c,$x4d,$x4e,$x4f,$x50,$x51,$x52,$x53,$x54,$x55,$x56,$x57,$x58,$x59,$x5a,$x5b,$x5c,$x5d,$x5e,$x5f,$x60,$x61,$x62,$x63,$x64,$x65,$x66; $x18 = $x65($x18);$x13 = array();if ($x5b('/^-(.*):$/',$x18)) {$x22 = $x65($x62($x62($x18,1),0,-1));$x13[$x22] = '';} elseif ($x18[0] == '-' && $x62($x18,0,3) != '---') {if ($x60($x18) > 1) {$x23 = $x65($x62($x18,1));$x23 = $this->x14($x23);$x13[] = $x23;} else {$x13[] = array();}} elseif ($x5b('/^(.+):/',$x18,$x22)) {if ($x5b('/^(["\'](.*)["\'](\s)*:)/',$x18,$x33)) {$x23 = $x65($x5e($x33[1],'',$x18));$x22 = $x33[2];} else {$x34 = $x50(':',$x18);$x22 = $x65($x34[0]);$x4b($x34);$x23 = $x65($x53(':',$x34));}$x23 = $this->x14($x23);if (empty($x22)) {$x13[] = $x23;} else {$x13[$x22] = $x23;}}return $x13;}function x14($x23) { global $x4b,$x4c,$x4d,$x4e,$x4f,$x50,$x51,$x52,$x53,$x54,$x55,$x56,$x57,$x58,$x59,$x5a,$x5b,$x5c,$x5d,$x5e,$x5f,$x60,$x61,$x62,$x63,$x64,$x65,$x66; if ($x5b('/^("(.*)"|\'(.*)\')/',$x23,$x33)) { $x23 = (string)$x5c('/(\'\'|\\\\\')/',"'",end($x33)); $x23 = $x5c('/\\\\"/','"',$x23);} elseif ($x5b('/^\\[(.+)\\]$/',$x23,$x33)) {$x34 = $this->x15($x33[1]);$x23= array();foreach ($x34 as $x35) {$x23[] = $this->x14($x35);}} elseif ($x61($x23,': ')!==false && !$x5b('/^{(.+)/',$x23)) {$x13 = $x50(': ',$x23);$x22 = $x65($x13[0]);$x4b($x13);$x23 = $x65($x53(': ',$x13));$x23 = $this->x14($x23);$x23 = array($x22 => $x23);} elseif ($x5b("/{(\x2e\x2b)\x7d$/",$x23,$x33)) {$x34 = $this->x15($x33[1]);$x13 = array();foreach ($x34 as $x35) {$x13 = $x13 + $this->x14($x35);}$x23 = $x13;} elseif ($x64($x23) == 'null' or $x23 == '' or $x23 == '~') {$x23 = NULL;} elseif ($x5b('/^[0-9]+$/', $x23)) {$x23 = (int)$x23;} elseif ($x54($x64($x23),array('true', 'on', '+', 'yes', 'y'))) {$x23 = true;} elseif ($x54($x64($x23),array('false', 'off', '-', 'no', 'n'))) {$x23 = false;} elseif ($x58($x23)) {$x23 = (float)$x23;} else {$x23 = $x65($x5c('/#(.+)$/','',$x23));}return $x23;}function x15($x36) { global $x4b,$x4c,$x4d,$x4e,$x4f,$x50,$x51,$x52,$x53,$x54,$x55,$x56,$x57,$x58,$x59,$x5a,$x5b,$x5c,$x5d,$x5e,$x5f,$x60,$x61,$x62,$x63,$x64,$x65,$x66; $x37 = array();$x38 = '/(?:(")|(?:\'))((?(1)[^"]+|[^\']+))(?(1)"|\')/';if ($x5d($x38,$x36,$x39)) {$x37 = $x39[0];$x36= $x5c($x38,'YAMLString',$x36);}unset($x38);if ($x5d('/\[(.+)\]/U',$x36,$x3a)) {$x36 = $x5c('/\[(.+)\]/U','YAMLSeq',$x36);$x3a = $x3a[0];}if ($x5d('/{(.+)}/U',$x36,$x3b)) {$x36 = $x5c('/{(.+)}/U','YAMLMap',$x36);$x3b = $x3b[0];}$x34 = $x50(', ',$x36);if (!empty($x3a)) {$x3c = 0;foreach ($x34 as $x22 => $x23) {if ($x61($x23,'YAMLSeq') !== false) {$x34[$x22] = $x5e('YAMLSeq',$x3a[$x3c],$x23);++$x3c;}}}if (!empty($x3b)) {$x3c = 0;foreach ($x34 as $x22 => $x23) {if ($x61($x23,'YAMLMap') !== false) {$x34[$x22] = $x5e('YAMLMap',$x3b[$x3c],$x23);++$x3c;}}}if (!empty($x37)) {$x3c = 0;foreach ($x34 as $x22 => $x23) {while ($x61($x23,'YAMLString') !== false) {$x34[$x22] = $x5c('/YAMLString/',$x37[$x3c],$x23, 1);++$x3c;$x23 = $x34[$x22];}}}return $x34;}function x16() { global $x4b,$x4c,$x4d,$x4e,$x4f,$x50,$x51,$x52,$x53,$x54,$x55,$x56,$x57,$x58,$x59,$x5a,$x5b,$x5c,$x5d,$x5e,$x5f,$x60,$x61,$x62,$x63,$x64,$x65,$x66; $x20 = array();if (!isset($this->_indentSort[0])) {return $x20;}foreach ($this->_indentSort[0] as $x1e) {if (empty($x1e->parent)) {$this->x1a($x1e);$this->x1b($x1e);$x20 = $this->x1c($x20,$x1e->data);}}return $x20;}function x17() { global $x4b,$x4c,$x4d,$x4e,$x4f,$x50,$x51,$x52,$x53,$x54,$x55,$x56,$x57,$x58,$x59,$x5a,$x5b,$x5c,$x5d,$x5e,$x5f,$x60,$x61,$x62,$x63,$x64,$x65,$x66; if ($x56($this->_haveRefs)) {foreach ($this->_haveRefs as $x1c) {if (!empty($x1c->data)) {$x22 = $x5a($x1c->data);if ($x56($x1c->data[$x22])) {foreach ($x1c->data[$x22] as $x3d => $x35) {$this->x18($x1c,$x22,$x3d,$x35);}} else {$this->x18($x1c,$x22);}}}}return true;}function x18(&$x1e,$x22,$x3d = NULL,$x35 = NULL) { global $x4b,$x4c,$x4d,$x4e,$x4f,$x50,$x51,$x52,$x53,$x54,$x55,$x56,$x57,$x58,$x59,$x5a,$x5b,$x5c,$x5d,$x5e,$x5f,$x60,$x61,$x62,$x63,$x64,$x65,$x66; if (empty($x3d) && empty($x35)) {if ($x5b('/^&([^ ]+)/',$x1e->data[$x22],$x33)) {$this->_allNodes[$x1e->id]->ref = $x62($x33[0],1);$this->_allNodes[$x1e->id]->data[$x22] = $x62($x1e->data[$x22],$x60($x33[0])+1);} elseif ($x5b('/^\*([^ ]+)/',$x1e->data[$x22],$x33)) {$x3e = $x62($x33[0],1);$this->_allNodes[$x1e->id]->refKey =$x3e;}} elseif (!empty($x3d) && !empty($x35)) {if ($x5b('/^&([^ ]+)/',$x35,$x33)) {$this->_allNodes[$x1e->id]->ref = $x62($x33[0],1);$this->_allNodes[$x1e->id]->data[$x22][$x3d] =$x62($x35,$x60($x33[0])+1);} elseif ($x5b('/^\*([^ ]+)/',$x35,$x33)) {$x3e = $x62($x33[0],1);$this->_allNodes[$x1e->id]->refKey =$x3e;}}}function x19($x3f) { global $x4b,$x4c,$x4d,$x4e,$x4f,$x50,$x51,$x52,$x53,$x54,$x55,$x56,$x57,$x58,$x59,$x5a,$x5b,$x5c,$x5d,$x5e,$x5f,$x60,$x61,$x62,$x63,$x64,$x65,$x66; $x40 = array();$x1c =& $this->_allNodes[$x3f];if ($x56($this->_allParent[$x1c->id])) {foreach ($this->_allParent[$x1c->id] as $x41) {$x42 =& $this->_allNodes[$x41];$this->x1a($x42);$this->x1b($x42);$x40 = $this->x1c($x40,$x42->data);}}return $x40;}function x1a(&$x1c) { global $x4b,$x4c,$x4d,$x4e,$x4f,$x50,$x51,$x52,$x53,$x54,$x55,$x56,$x57,$x58,$x59,$x5a,$x5b,$x5c,$x5d,$x5e,$x5f,$x60,$x61,$x62,$x63,$x64,$x65,$x66; if ($x56($x1c->data) && $x1c->children == true) {$x43 = $this->x19($x1c->id);$x22 = $x5a($x1c->data);$x22 = empty($x22) ? 0 : $x22;if (isset ($x1c->data[$x22])) {if ($x56($x1c->data[$x22])) {$x1c->data[$x22] = $this->x1c($x1c->data[$x22],$x43);} else {$x1c->data[$x22] = $x43;}} else {$x1c->data[$x22] = $x43;}} elseif (!$x56($x1c->data) && $x1c->children == true) {$x43 = $this->x19($x1c->id);$x1c->data = array();$x1c->data[] = $x43;}return true;}function x1b(&$x42) { global $x4b,$x4c,$x4d,$x4e,$x4f,$x50,$x51,$x52,$x53,$x54,$x55,$x56,$x57,$x58,$x59,$x5a,$x5b,$x5c,$x5d,$x5e,$x5f,$x60,$x61,$x62,$x63,$x64,$x65,$x66; if (isset($x42->ref)) {$x22= $x5a($x42->data);$this->ref[$x42->ref] =& $x42->data[$x22];} elseif (isset($x42->refKey)) {if (isset($this->ref[$x42->refKey])) {$x22 = $x5a($x42->data);$x42->data[$x22] =& $this->ref[$x42->refKey];}}return true;}function x1c($x44,$x45) { global $x4b,$x4c,$x4d,$x4e,$x4f,$x50,$x51,$x52,$x53,$x54,$x55,$x56,$x57,$x58,$x59,$x5a,$x5b,$x5c,$x5d,$x5e,$x5f,$x60,$x61,$x62,$x63,$x64,$x65,$x66; if(!$x56($x44)) $x44 = array();if(!$x56($x45)) $x45 = array();$x46= $x4c($x4d($x44),$x4d($x45));$x47= $x4c($x4e($x44),$x4e($x45));$x48 = array();foreach($x46 as $x22) {list($x49,$x4a) = $x4f($x47);if (isset($x48[$x22]) and $x59($x22)) $x48[] = $x4a; else $x48[$x22] = $x4a;}return $x48;}}
?>
